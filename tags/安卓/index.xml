<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安卓 on luoboQAQ</title><link>https://lbqaq.top/tags/%E5%AE%89%E5%8D%93/</link><description>Recent content in 安卓 on luoboQAQ</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 15 Sep 2023 15:52:44 +0800</lastBuildDate><atom:link href="https://lbqaq.top/tags/%E5%AE%89%E5%8D%93/index.xml" rel="self" type="application/rss+xml"/><item><title>从零开始编写Xposed模块</title><link>https://lbqaq.top/p/init-xposed/</link><pubDate>Fri, 21 Jul 2023 14:22:44 +0800</pubDate><guid>https://lbqaq.top/p/init-xposed/</guid><description>&lt;img src="https://lbqaq.top/p/init-xposed/109457609.webp" alt="Featured image of post 从零开始编写Xposed模块" />&lt;p>之前写过一篇关于&lt;a class="link" href="https://lbqaq.top/p/%E7%AE%80%E6%98%93magisk%E6%A8%A1%E5%9D%97%E7%9A%84%E5%88%B6%E4%BD%9C/" target="_blank" rel="noopener"
>Magisk模块&lt;/a>的编写的文章，不过Magisk修改的都是比较偏系统的，一般情况下用的并不是很多。于是我便把目光转向Xposed，毕竟会Hook真的太酷辣😎&lt;/p>
&lt;h2 id="xposed的基本概念">&lt;a href="#xposed%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5" class="header-anchor">&lt;/a>Xposed的基本概念
&lt;/h2>&lt;p>提到Xposed，爱玩机的用户都应该听过他的大名，作为一款可以在不修改APK的情况下影响程序运行的框架，可以基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。微信防撤回、步数修改、去广告、美化&amp;hellip;&amp;hellip;.他能实现许许多多的功能，可以说没有它玩机的世界将会少很多的乐趣。&lt;/p>
&lt;p>它的原理就是通过替换系统原本的&lt;code>app_process&lt;/code>，加载一个额外的jar包，从而实现对zygote进程及其创建的Dalvik/ART虚拟机的劫持。&lt;/p>
&lt;p>没听懂？没关系，&lt;del>我也不懂&lt;/del>。目前我们只要关注如何使用即可了，至于原理可以先放一放。&lt;/p>
&lt;h2 id="环境准备">&lt;a href="#%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87" class="header-anchor">&lt;/a>环境准备
&lt;/h2>&lt;p>在开始之前，我们需要：&lt;/p>
&lt;ul>
&lt;li>一台可以安装Xposed框架的手机（推荐LSPosed、Android 10+）&lt;/li>
&lt;li>一台可以编写代码并且装有jdk的电脑&lt;/li>
&lt;li>一个名叫&lt;a class="link" href="https://developer.android.com/studio" target="_blank" rel="noopener"
>Android Studio&lt;/a>的软件（我主打一个叛逆，用&lt;a class="link" href="https://www.jetbrains.com/zh-cn/idea/download/" target="_blank" rel="noopener"
>IDEA&lt;/a>同样可以）&lt;/li>
&lt;li>一个反编译软件，如：&lt;a class="link" href="https://github.com/skylot/jadx" target="_blank" rel="noopener"
>JADX&lt;/a>&lt;/li>
&lt;li>一个可以查看布局的App，如：开发者助手&lt;/li>
&lt;/ul>
&lt;p>这次我打算从一个实例出发：小明手机上装了一些恶意软件，我们需要通过Xposed进行Hook，不让小明启动这些软件。&lt;/p>
&lt;h2 id="准备工作">&lt;a href="#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c" class="header-anchor">&lt;/a>准备工作
&lt;/h2>&lt;h3 id="创建项目引入依赖">&lt;a href="#%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae%e5%bc%95%e5%85%a5%e4%be%9d%e8%b5%96" class="header-anchor">&lt;/a>创建项目&amp;amp;引入依赖
&lt;/h3>&lt;p>首先在IDEA选择新建项目，可以看到生成器下有Android这项，我们选择它。&lt;/p>
&lt;p>第一次选择时可能会要求你下载安卓的SDK，按照指示一步一步进行就好。&lt;/p>
&lt;h4 id="java">&lt;a href="#java" class="header-anchor">&lt;/a>Java
&lt;/h4>&lt;p>我们选择创建一个&lt;code>No Activity&lt;/code>，语言选择&lt;code>Java&lt;/code>，SDK选默认的&lt;code>API 24&lt;/code>就可。&lt;/p>
&lt;p>然后，我们需要引入Xposed的库，不过它并没有上传到MavenCentral上，所以我们需要在&lt;code>settings.gradle&lt;/code>里修改一下(gradle 7.0+)&lt;/p>
&lt;p>打开&lt;code>settings.gradle&lt;/code>，添加一行代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencyResolutionManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repositoriesMode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RepositoriesMode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FAIL_ON_PROJECT_REPOS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">google&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">maven&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="s1">&amp;#39;https://api.xposed.info/&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="c1">// 添加这一行即可
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后，进入我们app目录下的build.gradle，引入xposed的依赖&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">compileOnly&lt;/span> &lt;span class="s1">&amp;#39;de.robv.android.xposed:api:82&amp;#39;&lt;/span> &lt;span class="c1">//添加我
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// compileOnly &amp;#39;de.robv.android.xposed:api:82:sources&amp;#39; // 不要导入源码，这会导致idea无法索引文件，从而让语法提示失效
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们还要在&lt;code>./app/src/main/res/values&lt;/code>目录下创建&lt;code>arrays.xml&lt;/code>，填入下面的内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;string-array&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;xposedscope&amp;#34;&lt;/span> &lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 这里填写模块的作用域应用的包名，可以填多个。 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;item&amp;gt;&lt;/span>ceui.lisa.pixiv&lt;span class="nt">&amp;lt;/item&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;item&amp;gt;&lt;/span>com.xjs.ehviewer&lt;span class="nt">&amp;lt;/item&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;item&amp;gt;&lt;/span>com.picacomic.fregata&lt;span class="nt">&amp;lt;/item&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/string-array&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这一步主要是指定模块的作用域包名，效果就是在Lsposed中勾选作用域时会在应用下提示推荐应用。&lt;/p>
&lt;p>&lt;img src="https://lbqaq.top/p/init-xposed/IMAGE/1.jpg"
width="864"
height="956"
srcset="https://lbqaq.top/p/init-xposed/IMAGE/1_hu_844a5e10eae581d7.jpg 480w, https://lbqaq.top/p/init-xposed/IMAGE/1_hu_a27c19c76dcb8ce0.jpg 1024w"
loading="lazy"
alt="推荐应用效果"
class="gallery-image"
data-flex-grow="90"
data-flex-basis="216px"
>&lt;/p>
&lt;p>最后，我们在Run那里编辑一下启动配置，勾选&lt;code>Always install with package manager&lt;/code>并且将&lt;code>Launch Options&lt;/code>改成&lt;code>Nothing&lt;/code>&lt;/p>
&lt;h4 id="kotlin">&lt;a href="#kotlin" class="header-anchor">&lt;/a>Kotlin
&lt;/h4>&lt;p>创建项目的部分和Java的设置没有什么区别，只不过是需要将语言切换一下。新版本的Android Studio将原来的打包语言换成了Kotlin，所以我们的设置有一些不一样的地方。&lt;a class="link" href="#20240915" >2024.09.15更新&lt;/a>&lt;/p>
&lt;p>原来的&lt;code>settings.gradle&lt;/code>变为&lt;code>settings.gradle.kts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencyResolutionManagement&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repositoriesMode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RepositoriesMode&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">FAIL_ON_PROJECT_REPOS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">google&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">maven&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;https://api.xposed.info/&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="c1">//添加这一行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>原来的&lt;code>build.gradle&lt;/code>变为&lt;code>build.gradle.kts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gradle" data-lang="gradle">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">compileOnly&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;de.robv.android.xposed:api:82&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">//添加我
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="声明模块">&lt;a href="#%e5%a3%b0%e6%98%8e%e6%a8%a1%e5%9d%97" class="header-anchor">&lt;/a>声明模块
&lt;/h3>&lt;p>接下来就是要声明我们是一个Xposed模块，方便框架发现。&lt;/p>
&lt;p>在&lt;code>./app/src/main/AndroidManifest.xml&lt;/code>里，我们将&lt;code>&amp;lt;application ... /&amp;gt;&lt;/code>改成以下形式（注意，是改成！就是把结尾的&lt;code>/&amp;gt;&lt;/code>换成&lt;code>&amp;gt; &amp;lt;/application&amp;gt;&lt;/code>）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;application&lt;/span> &lt;span class="err">...&lt;/span> &lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 是否是xposed模块，xposed根据这个来判断是否是模块 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;meta-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;xposedmodule&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:value=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 模块描述，显示在xposed模块列表那里第二行 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;meta-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;xposeddescription&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:value=&lt;/span>&lt;span class="s">&amp;#34;不可以涩涩&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 最低xposed版本号(lib文件名可知,一般填54即可) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;meta-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;xposedminversion&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:value=&lt;/span>&lt;span class="s">&amp;#34;54&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 模块作用域 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;meta-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:name=&lt;/span>&lt;span class="s">&amp;#34;xposedscope&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:resource=&lt;/span>&lt;span class="s">&amp;#34;@array/xposedscope&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在&lt;code>src/main&lt;/code>目录下创建一个文件夹名叫&lt;code>assets&lt;/code>，并且创建一个文件叫&lt;code>xposed_init&lt;/code>，&lt;strong>注意，它没有后缀名！！&lt;/strong>。&lt;/p>
&lt;p>接着我们需要创建一个入口类，名叫&lt;code>MainHook&lt;/code>（或者随便你想取什么名字都行），创建好后回到我们的&lt;code>xposed_init&lt;/code>里并用文本文件的方式打开它，输入我们刚刚创建的类的完整路径。如：&lt;code>top.lbqaq.nosese.MainHook&lt;/code>，同时&lt;strong>注意大小写&lt;/strong>。&lt;/p>
&lt;p>完成以上步骤后，我们就可以正式开始编写Xposed模块了。&lt;/p>
&lt;h2 id="模块编写">&lt;a href="#%e6%a8%a1%e5%9d%97%e7%bc%96%e5%86%99" class="header-anchor">&lt;/a>模块编写
&lt;/h2>&lt;h3 id="mainhook">&lt;a href="#mainhook" class="header-anchor">&lt;/a>MainHook
&lt;/h3>&lt;p>在&lt;code>MainHook&lt;/code>里，我们需要实现Xposed的IXposedHookLoadPackage接口，以便执行Hook操作。将以下内容替换原来的类&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">de.robv.android.xposed.IXposedHookLoadPackage&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">de.robv.android.xposed.callbacks.XC_LoadPackage&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MainHook&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IXposedHookLoadPackage&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleLoadPackage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">XC_LoadPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LoadPackageParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 过滤不必要的应用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">packageName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ceui.lisa.pixiv&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 执行Hook&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">hook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">XC_LoadPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LoadPackageParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 具体流程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于Kotlin，代码如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">import&lt;/span> &lt;span class="nn">de.robv.android.xposed.IXposedHookLoadPackage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">import&lt;/span> &lt;span class="nn">de.robv.android.xposed.callbacks.XC_LoadPackage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MainHook&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">IXposedHookLoadPackage&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">handleLoadPackage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nc">XC_LoadPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadPackageParam&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 过滤不必要的应用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">packageName&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s2">&amp;#34;ceui.lisa.pixiv&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 执行Hook
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">hook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">private&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">hook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nc">XC_LoadPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadPackageParam&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 具体流程
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>到这里，我们的准备工作已经完成，安装模块并在框架中激活它！&lt;/p>
&lt;h3 id="阻止应用启动">&lt;a href="#%e9%98%bb%e6%ad%a2%e5%ba%94%e7%94%a8%e5%90%af%e5%8a%a8" class="header-anchor">&lt;/a>阻止应用启动
&lt;/h3>&lt;p>接下来，我们需要反编译程序来找到需要Hook的点。根据实例的要求，我们需要阻止小明启动某些应用。那么，我们只需要Hook启动函数，让其无法运行即可。&lt;/p>
&lt;p>在此之前，我们要先了解Android的四大组件之一——&amp;ldquo;Activity(活动)&amp;rdquo;&lt;/p>
&lt;blockquote>
&lt;p>在应用中的一个Activity可以用来表示一个界面，意思可以理解为“活动”，即一个活动开始，代表 Activity组件启动，活动结束，代表一个Activity的生命周期结束。一个Android应用必须通过Activity来运行和启动，Activity的生命周期交给系统统一管理。&lt;/p>&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>函数名称&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>onCreate()&lt;/td>
&lt;td>一个Activity启动后第一个被调用的函数，常用来在此方法中进行Activity的一些初始化操作。例如创建View，绑定数据，注册监听，加载参数等。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onStart()&lt;/td>
&lt;td>当Activity显示在屏幕上时，此方法被调用但此时还无法进行与用户的交互操作。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onResume()&lt;/td>
&lt;td>这个方法在onStart()之后调用，也就是在Activity准备好与用户进行交互的时候调用，此时的Activity一定位于Activity栈顶，处于运行状态。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onPause()&lt;/td>
&lt;td>这个方法是在系统准备去启动或者恢复另外一个Activity的时候调用，通常在这个方法中执行一些释放资源的方法，以及保存一些关键数据。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onStop()&lt;/td>
&lt;td>这个方法是在Activity完全不可见的时候调用的。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onDestroy()&lt;/td>
&lt;td>这个方法在Activity销毁之前调用，之后Activity的状态为销毁状态。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>onRestart()&lt;/td>
&lt;td>当Activity从停止stop状态恢进入start状态时调用状态。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>当 Activity 进入新状态时，系统会调用其中每个回调。&lt;/p>
&lt;p>&lt;img src="https://lbqaq.top/p/init-xposed/IMAGE/activity_lifecycle.png"
width="513"
height="663"
srcset="https://lbqaq.top/p/init-xposed/IMAGE/activity_lifecycle_hu_dee1c1ccebe80832.png 480w, https://lbqaq.top/p/init-xposed/IMAGE/activity_lifecycle_hu_5724e3eb302afd88.png 1024w"
loading="lazy"
alt="Activity生命周期"
class="gallery-image"
data-flex-grow="77"
data-flex-basis="185px"
>&lt;/p>
&lt;p>那么，我们的思路就很明确了：只要找到这些程序的起始Activity，并Hook它的&lt;code>onCreate()&lt;/code>函数，在其启动时就将其杀死，这样能实现无法启动该程序。&lt;/p>
&lt;p>我们使用开发者助手，选择布局查看，然后打开目标应用。可以看到，它显示了当前的包名和当前Activity。&lt;/p>
&lt;p>&lt;img src="https://lbqaq.top/p/init-xposed/IMAGE/2.jpg"
width="432"
height="960"
srcset="https://lbqaq.top/p/init-xposed/IMAGE/2_hu_52b78cececac8714.jpg 480w, https://lbqaq.top/p/init-xposed/IMAGE/2_hu_15ac3d3dccafb44b.jpg 1024w"
loading="lazy"
alt="布局查看"
class="gallery-image"
data-flex-grow="45"
data-flex-basis="108px"
>&lt;/p>
&lt;p>接下来，我们使用jadx-gui，反编译该应用，找到该Activity(&lt;code>ceui.lisa.activities.MainActivity&lt;/code>)，并寻找是否有&lt;code>onCreate()&lt;/code>函数，如果存在直接Hook即可。&lt;/p>
&lt;p>&lt;img src="https://lbqaq.top/p/init-xposed/IMAGE/image-20230721100655336.png"
width="1790"
height="1004"
srcset="https://lbqaq.top/p/init-xposed/IMAGE/image-20230721100655336_hu_730d6091497d831b.png 480w, https://lbqaq.top/p/init-xposed/IMAGE/image-20230721100655336_hu_a03e790876a820cf.png 1024w"
loading="lazy"
alt="jadx-gui反编译"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="427px"
>&lt;/p>
&lt;p>然而，这个程序居然没有😥，说明它没有重写该方法，那该如何做呢？这时就可以用第二种方法了。&lt;/p>
&lt;h3 id="遍历所有类下的所有方法">&lt;a href="#%e9%81%8d%e5%8e%86%e6%89%80%e6%9c%89%e7%b1%bb%e4%b8%8b%e7%9a%84%e6%89%80%e6%9c%89%e6%96%b9%e6%b3%95" class="header-anchor">&lt;/a>遍历所有类下的所有方法
&lt;/h3>&lt;p>从标题就能看出来，我直接把你所有能Hook的方法全部读出来，那不就随便我挑了嘛。&lt;/p>
&lt;p>我们知道，Java程序都运行在jvm虚拟机中，jvm虚拟机通过ClassLoader动态装载所需的class。那么，我们直接Hook ClassLoader ，不就知道你有哪些方法被加载进来了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">hook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">XC_LoadPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LoadPackageParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ClassLoader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;loadClass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getResult&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clazzName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//排除非包名的类&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clazzName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ceui.lisa&amp;#34;&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Method&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mds&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDeclaredMethods&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">mds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Method&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">md&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mds&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mod&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mds&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getModifiers&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">//去除抽象、native、接口方法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">Modifier&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isAbstract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">Modifier&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isNative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;!&lt;/span>&lt;span class="n">Modifier&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isAbstract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedBridge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mds&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">beforeHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">beforeHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">d&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;lbqaq&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">md&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>（PS：这个程序很奇怪，包名有pixiv，但类名没有，所以用&lt;code>ceui.lisa.pixiv&lt;/code>会报空指针异常）&lt;/p>
&lt;p>将上面这段代码复制到之前写好的&lt;code>MainHook&lt;/code>中去，编译推送到手机。&lt;/p>
&lt;p>在终端执行&lt;code>adb logcat &amp;quot;lbqaq:D *:S&amp;quot;&lt;/code>开启logcat并进行过滤。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">❯ adb logcat &amp;#34;lbqaq:D *:S&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------- beginning of main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.185 5050 5050 D lbqaq : public void ceui.lisa.activities.Shaft.onCreate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.194 5050 5050 D lbqaq : private void ceui.lisa.activities.Shaft.updateTheme()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.216 5050 5050 D lbqaq : public static android.content.Context ceui.lisa.activities.Shaft.getContext()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.238 5050 5050 D lbqaq : protected int ceui.lisa.activities.MainActivity.initLayout()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.238 5050 5050 D lbqaq : public boolean ceui.lisa.activities.MainActivity.hideStatusBar()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.276 5050 5050 D lbqaq : protected void ceui.lisa.activities.MainActivity.initView()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.276 5050 5050 D lbqaq : public static com.tencent.mmkv.MMKV ceui.lisa.activities.Shaft.getMMKV()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.276 5050 5050 D lbqaq : private void ceui.lisa.activities.MainActivity.initDrawerHeader()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.278 5050 5050 D lbqaq : public androidx.drawerlayout.widget.DrawerLayout ceui.lisa.activities.MainActivity.getDrawer()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.279 5050 5050 D lbqaq : protected void ceui.lisa.activities.MainActivity.initData()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">07-21 10:49:48.279 5050 5050 D lbqaq : private void ceui.lisa.activities.MainActivity.initFragment()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到该程序的调用方法。这里，我们选择靠后的&lt;code>ceui.lisa.activities.MainActivity.initFragment()&lt;/code>作为我们的Hook目标。&lt;/p>
&lt;div class="notice notice-info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512" fill="hsl(30, 80%, 70%)">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>&lt;p>为什么要选择靠后的方法作为我们的Hook目标呢？&lt;/p>
&lt;p>这是由于如果选择较前的方法，有些变量还没初始化完成，这时调用&lt;code>finish()&lt;/code>可能会报错。&lt;/p>&lt;/div>
&lt;h3 id="hook-activity">&lt;a href="#hook-activity" class="header-anchor">&lt;/a>Hook activity
&lt;/h3>&lt;p>我们使用最基础的hook方式，即Xposed自带的&lt;code>XposedHelpers.findAndHookMethod&lt;/code>，使用方法如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">hook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">XC_LoadPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LoadPackageParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 它有两个重载，区别是一个是填Class，一个是填ClassName以及ClassLoader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 第一种 填ClassName&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Unhook&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unhook&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;me.kyuubiran.xposedapp.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// className&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">classLoader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// classLoader 使用lpparam.classLoader&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;onCreate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 要hook的方法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Bundle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 要hook的方法的参数表，如果有多个就用逗号隔开 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 最后一个填hook的回调&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">beforeHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Hook方法执行前 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Hook方法执行后&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 它返回一个unhook 在你不需要继续hook的时候可以调用它来取消Hook&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unhook&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unhook&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消空的Hook &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 第二种方式 填Class&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 首先你得加载它的类 我们使用XposedHelpers.findClass即可 参数有两个 一个是类名 一个是类加载器&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;me.kyuubiran.xposedapp.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">classLoader&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;onCreate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Bundle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 由于我们需要在Activity创建之后再弹出Toast，所以我们Hook方法执行之后&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">makeText&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;模块加载成功！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">show&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>根据上面的示例，我们就可以写出对应的方法了。那么，我们该如何结束这个程序呢？在前面我们介绍了Activity的生存周期，通过查询可知Activity存在一个关闭的方法&lt;code>finish()&lt;/code>。所以我们只要手动调用即可，具体的代码如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">packageName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ceui.lisa.pixiv&amp;#34;&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ceui.lisa.activities.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">classLoader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;initFragment&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">makeText&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;不许涩涩！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">show&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">finish&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>同样，另外两个应用也可以通过这种方式实现&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">packageName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;com.xjs.ehviewer&amp;#34;&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;com.hippo.ehviewer.ui.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">classLoader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;initUserImage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">makeText&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;不许涩涩！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">show&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">finish&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">packageName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;com.picacomic.fregata&amp;#34;&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;com.picacomic.fregata.activities.SplashActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">classLoader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;onCreate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Bundle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">makeText&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;不许涩涩！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">show&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">finish&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里要注意，使用&lt;code>findAndHookMethod&lt;/code>时要hook的方法的参数表一定要填对。如果没有填对就会报&lt;code>java.lang.NoSuchMethodError&lt;/code>错误。我之前被这个问题折磨了很久😭（仔细想想也是这样，Java里有重载机制，参数不同就不是同一个方法了）&lt;/p>
&lt;p>kotlin所对应的代码如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">packageName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;com.xjs.ehviewer&amp;#34;&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;com.hippo.ehviewer.ui.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">classLoader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;initUserImage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">object&lt;/span> &lt;span class="err">: &lt;/span>&lt;span class="nc">XC&lt;/span>&lt;span class="n">_MethodHook&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">param&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MethodHookParam&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">thisObject&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">Activity&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;不许涩涩！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">thisObject&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">Activity&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">finish&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="修改内部参数">&lt;a href="#%e4%bf%ae%e6%94%b9%e5%86%85%e9%83%a8%e5%8f%82%e6%95%b0" class="header-anchor">&lt;/a>修改内部参数
&lt;/h3>&lt;p>虽然一股脑关闭程序非常简单，但小明不乐意了。对于&lt;code>ceui.lisa.pixiv&lt;/code>来说，只有长按头像才会触发，直接一刀切实在是太粗暴了。没问题，直接安排上。&lt;/p>
&lt;p>首先我们要定位到这个切换的方法究竟在哪？仔细观察，每次切换都会弹出一个颜文字的Toast，我们就从此处切入。这两个颜文字分别为&lt;code>ԅ(♡﹃♡ԅ)&lt;/code>和&lt;code>X﹏X&lt;/code>。&lt;/p>
&lt;p>我们使用jadx-gui反编译程序，全局搜索，直接就找到了所在位置。&lt;/p>
&lt;p>&lt;img src="https://lbqaq.top/p/init-xposed/IMAGE/image-20230721141436862.png"
width="793"
height="493"
srcset="https://lbqaq.top/p/init-xposed/IMAGE/image-20230721141436862_hu_181bd4c880565686.png 480w, https://lbqaq.top/p/init-xposed/IMAGE/image-20230721141436862_hu_e8c62698746d232f.png 1024w"
loading="lazy"
alt="全局搜索"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="386px"
>&lt;/p>
&lt;p>双击查看此处的代码，坏起来了，这是一个匿名函数，根据上面的方法，我们没有这个函数名，自然也就无法对其进行Hook。&lt;/p>
&lt;p>&lt;img src="https://lbqaq.top/p/init-xposed/IMAGE/image-20230721141535571.png"
width="1788"
height="996"
srcset="https://lbqaq.top/p/init-xposed/IMAGE/image-20230721141535571_hu_aeda4e86ca43434e.png 480w, https://lbqaq.top/p/init-xposed/IMAGE/image-20230721141535571_hu_3083de029044a583.png 1024w"
loading="lazy"
alt="具体代码"
class="gallery-image"
data-flex-grow="179"
data-flex-basis="430px"
>&lt;/p>
&lt;p>难道就要卡在这里了吗？&lt;del>如果真是这样我就不会写这篇文章了&lt;/del>&lt;/p>
&lt;p>仔细分析这段代码，这里对&lt;code>this.userHead&lt;/code>设置了一个&lt;code>OnLongClickListener&lt;/code>。一个控件只能绑定一个侦听器，所以我们可以进行一个替换，不就实现对其的Hook了吗😎&lt;/p>
&lt;p>直接Hook &lt;code>initView&lt;/code>这个方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">packageName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ceui.lisa.pixiv&amp;#34;&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ceui.lisa.activities.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">classLoader&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;initView&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">XC_MethodHook&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MethodHookParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Field&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getClass&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getDeclaredField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;userHead&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAccessible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ImageView&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ImageView&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// v.setLongClickable(false); //设置其无法响应&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setOnLongClickListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">makeText&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Activity&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thisObject&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;不许涩涩！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">show&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们这里使用了Java的反射机制，拿到了它内部的变量&lt;code>userHead&lt;/code>，然后通过&lt;code>setAccessible&lt;/code>将其设置为可访问。这样我们就能对其私有变量进行修改了。&lt;/p>
&lt;p>我们可以简单的将其可点击关闭，但是这样一点也不酷。我直接使用自己的函数将其进行替换，这样每次点击都会出现一个&lt;code>Toast&lt;/code>。&lt;/p>
&lt;p>kotlin的代码如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">packageName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;ceui.lisa.pixiv&amp;#34;&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">XposedHelpers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">findAndHookMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ceui.lisa.activities.MainActivity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lpparam&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">classLoader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;initView&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">object&lt;/span> &lt;span class="err">: &lt;/span>&lt;span class="nc">XC&lt;/span>&lt;span class="n">_MethodHook&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">afterHookedMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">param&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MethodHookParam&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">f&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">thisObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">javaClass&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getDeclaredField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;userHead&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">isAccessible&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">v&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">thisObject&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ImageView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setOnLongClickListener&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">makeText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">param&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">thisObject&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">Activity&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;不许涩涩！&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nc">Toast&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LENGTH_SHORT&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，一个简单的Xposed模块就写好了。&lt;/p>
&lt;h2 id="配置文件读取">&lt;a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e8%af%bb%e5%8f%96" class="header-anchor">&lt;/a>配置文件读取
&lt;/h2>&lt;p>现在的模块往往还会搭配一个UI来实现配置文件的设置，在安卓开发中，常用&lt;code>SharedPreferences&lt;/code>来实现配置的保存。随着google的更新，现在的配置文件无法设置&lt;code>MODE_WORLD_READABLE&lt;/code>的权限，即只允许本应用读取。虽然Xposed本身提供了&lt;code>XSharedPreferences&lt;/code>来读取配置文件，然而模块是依附于宿主程序所执行的，它的访问权限和宿主一致，所以无法访问到我们的配置文件。&lt;a class="link" href="#20240915" >2024.09.15更新&lt;/a>&lt;/p>
&lt;p>好在目前常用的框架LSPosed提供了&lt;a class="link" href="https://github.com/LSPosed/LSPosed/wiki/New-XSharedPreferences" target="_blank" rel="noopener"
>New XSharedPreferences&lt;/a>，我们只需要指定xposedAPI的最低版本≥93就可以了。&lt;/p>
&lt;p>在&lt;code>AndroidManifest.xml&lt;/code>里将&lt;code>xposedminversion&lt;/code>的值改为&lt;code>93&lt;/code>&lt;/p>
&lt;p>对于模块的Activity来说，我们只需要指定权限为&lt;code>Context.MODE_WORLD_READABLE&lt;/code>即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">sharedPreferences&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">SharedPreferences&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">getSharedPreferences&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;config&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nc">Context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">MODE_WORLD_READABLE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于hook的应用来说，我们使用原来的&lt;code>XSharedPreferences&lt;/code>即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">xsp&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">XSharedPreferences&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;top.lbqaq.nosese&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;config&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="结语">&lt;a href="#%e7%bb%93%e8%af%ad" class="header-anchor">&lt;/a>结语
&lt;/h2>&lt;p>完整的项目代码可以在&lt;a class="link" href="https://github.com/luoboQAQ/nosese" target="_blank" rel="noopener"
>Github仓库&lt;/a>中查看，通过这次的编写，我发现Xposed实际上还是一个工具，想要实现去广告等功能，都是通过反编译来找到突破口，有了Hook的目标后才需要Xposed。&lt;/p>
&lt;p>所以，之后的学习还是要以安卓逆向为主，只有打好基本功，才能写出优秀的代码。&lt;/p>
&lt;h2 id="后续更新">&lt;a href="#%e5%90%8e%e7%bb%ad%e6%9b%b4%e6%96%b0" class="header-anchor">&lt;/a>后续更新
&lt;/h2>&lt;h3 id="20240915">&lt;a href="#20240915" class="header-anchor">&lt;/a>2024.09.15
&lt;/h3>&lt;p>将项目使用了目前流行的Kotlin重构了一波，并添加了UI和模块的配置读取的内容&lt;/p>
&lt;h2 id="参考文献">&lt;a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%8c%ae" class="header-anchor">&lt;/a>参考文献
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.52pojie.cn/thread-1740944-1-1.html" target="_blank" rel="noopener"
>《安卓逆向这档事》七、Sorry，会Hook真的可以为所欲为-Xposed快速上手(上)模块编.. - 吾爱破解&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.ketal.icu/cn/Xposed%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener"
>Xposed模块开发入门保姆级教程 - 狐言狐语和仙贝的魔法学习记录&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.52pojie.cn/thread-1706691-1-1.html" target="_blank" rel="noopener"
>《安卓逆向这档事》四、恭喜你获得广告&amp;amp;弹窗静默卡 - 吾爱破解&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.52pojie.cn/thread-1748081-1-1.html" target="_blank" rel="noopener"
>《安卓逆向这档事》八、Sorry，会Hook真的可以为所欲为-Xposed快速上手(下)模块编.. - 吾爱破解&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>简易Magisk模块的制作</title><link>https://lbqaq.top/p/%E7%AE%80%E6%98%93magisk%E6%A8%A1%E5%9D%97%E7%9A%84%E5%88%B6%E4%BD%9C/</link><pubDate>Fri, 07 Oct 2022 11:30:17 +0800</pubDate><guid>https://lbqaq.top/p/%E7%AE%80%E6%98%93magisk%E6%A8%A1%E5%9D%97%E7%9A%84%E5%88%B6%E4%BD%9C/</guid><description>&lt;img src="https://lbqaq.top/p/%E7%AE%80%E6%98%93magisk%E6%A8%A1%E5%9D%97%E7%9A%84%E5%88%B6%E4%BD%9C/95936465.webp" alt="Featured image of post 简易Magisk模块的制作" />&lt;h2 id="前言">&lt;a href="#%e5%89%8d%e8%a8%80" class="header-anchor">&lt;/a>前言
&lt;/h2>&lt;p>说到搞机，那肯定绕不开大名鼎鼎的&lt;a class="link" href="https://github.com/topjohnwu/Magisk" target="_blank" rel="noopener"
>Magisk&lt;/a>。就我来说，&lt;code>root&lt;/code>完后做的第一件事，就是安装各种各样的模块，但是，我却从来没有研究过Magisk的内容。同时，现在也有许多心怀不轨的人制作锁机模块骗人刷入。所以，了解Magisk模块的一些基本内容就显得比较重要了。&lt;/p>
&lt;h2 id="认识magisk模块">&lt;a href="#%e8%ae%a4%e8%af%86magisk%e6%a8%a1%e5%9d%97" class="header-anchor">&lt;/a>认识Magisk模块
&lt;/h2>&lt;p>根据官方的文档，一个典型的Magisk模块的目录应该如下所示：&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">module.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── META-INF
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── google
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── android
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── update-binary &amp;lt;--- 从官方仓库上下载的module_installer.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── updater-script &amp;lt;--- 只有一行文字为 &amp;#34;#MAGISK&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── module.prop &amp;lt;--- 模块的标识信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── customize.sh &amp;lt;--- (可选)用于自定义模块安装过程
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── ... /* 模块的其余文件 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看出来，&lt;code>META-INF&lt;/code>目录是由官方提供，并不需要我们进行修改。&lt;/p>
&lt;h3 id="moduleprop">&lt;a href="#moduleprop" class="header-anchor">&lt;/a>module.prop
&lt;/h3>&lt;p>这个文件是模块的标识信息，模块的基本信息就存放在这里，文件的格式如下。&lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">id=&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name=&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">version=&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">versionCode=&amp;lt;int&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author=&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description=&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">updateJson=&amp;lt;url&amp;gt; (optional)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>各键值的作用说明如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>id&lt;/td>
&lt;td>模块的唯一标识符，需符合该正则表达式&lt;code>^[a-zA-Z][a-zA-Z0-9._-]+$&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>name&lt;/td>
&lt;td>模块名称&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>version&lt;/td>
&lt;td>模块版本号&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>versionCode&lt;/td>
&lt;td>模块版本标识，必须为整数，用于更新&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>author&lt;/td>
&lt;td>作者信息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>description&lt;/td>
&lt;td>模块描述&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>updateJson&lt;/td>
&lt;td>更新信息链接，现在Magisk移除了内部的更新功能，这个属性应该是无用了&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="system文件夹">&lt;a href="#system%e6%96%87%e4%bb%b6%e5%a4%b9" class="header-anchor">&lt;/a>system文件夹
&lt;/h3>&lt;p>Magisk的一个主要作用就是对系统文件进行注入或替换，只要将文件按顺序放入此目录中即可。例如我想修改hosts文件，只需要将修改好的hosts文件放入&lt;code>system/etc&lt;/code>这个目录下，Magisk就会自动将其替换了。&lt;/p>
&lt;p>如果要替换&lt;code>/vendor&lt;/code>、&lt;code>/product&lt;/code>或&lt;code>/system_ext&lt;/code>中的文件，只需将它们分别放在&lt;code>system/vendor&lt;/code>、&lt;code>system/product&lt;/code>和&lt;code>system/system_ext&lt;/code>下。Magisk就会自动替换完成。&lt;/p>
&lt;h3 id="customizesh">&lt;a href="#customizesh" class="header-anchor">&lt;/a>customize.sh
&lt;/h3>&lt;p>这是自定义模块安装过程，如果只是简单的替换文件就不需要用到它。但是，很多时候我们并不是仅需替换文件，还需要执行一些脚本，这里就需要使用到它了。&lt;/p>
&lt;p>根据官方文档，这里支持以下的环境变量：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>变量名&lt;/th>
&lt;th>作用&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>MAGISK_VER (string)&lt;/td>
&lt;td>当前安装的Magisk的版本字符串（例如v20.0）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MAGISK_VER_CODE (int)&lt;/td>
&lt;td>当前安装的Magisk的版本代码（例如20000）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>BOOTMODE (bool)&lt;/td>
&lt;td>如果模块正在Magisk应用程序中安装，则为true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MODPATH (path)&lt;/td>
&lt;td>安装模块文件的路径&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TMPDIR (path)&lt;/td>
&lt;td>可以临时存储文件的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ZIPFILE (path)&lt;/td>
&lt;td>您的模块的安装zip&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ARCH (string)&lt;/td>
&lt;td>设备的CPU架构，值可以是&lt;code>arm&lt;/code>、&lt;code>arm 64&lt;/code>、&lt;code>x86&lt;/code>或&lt;code>x64&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IS64BIT (bool)&lt;/td>
&lt;td>如果&lt;code>$ARCH&lt;/code>为&lt;code>arm 64&lt;/code>或&lt;code>x64&lt;/code>，则为true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API (int)&lt;/td>
&lt;td>设备的API级别（Android版本）（例如，Android 5.0为21）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>以及以下的命令：&lt;/p>
&lt;ul>
&lt;li>&lt;code>ui_print &amp;lt;msg&amp;gt;&lt;/code>：在页面上显示信息&lt;/li>
&lt;li>&lt;code>abort &amp;lt;msg&amp;gt;&lt;/code>：将错误消息打印到控制台并终止安装&lt;/li>
&lt;li>&lt;code>set_perm&lt;/code>和&lt;code>set_perm_recursive&lt;/code>：修改文件权限&lt;/li>
&lt;/ul>
&lt;h2 id="实践">&lt;a href="#%e5%ae%9e%e8%b7%b5" class="header-anchor">&lt;/a>实践
&lt;/h2>&lt;h3 id="修改系统hosts">&lt;a href="#%e4%bf%ae%e6%94%b9%e7%b3%bb%e7%bb%9fhosts" class="header-anchor">&lt;/a>修改系统Hosts
&lt;/h3>&lt;p>我一开始想研究Magisk的契机，就是想要修改我手机的Hosts文件。一开始按百度的教程做，但没有效果，后来就尝试了一下Magisk模块，直接就成功了。&lt;/p>
&lt;p>有了前面知识的铺垫，想要实现这个功能就非常简单了，下面列出我们程序的目录树。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ChangeHosts.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── META-INF
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── google
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── android
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── update-binary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── updater-script
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── module.prop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── etc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── hosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>实际我们需要修改的部分只有&lt;code>module.prop&lt;/code>和&lt;code>hosts&lt;/code>，&lt;code>hosts&lt;/code>是我们需要修改的文件，所以我们就只要关注&lt;code>module.prop&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-properties" data-lang="properties">&lt;span class="line">&lt;span class="cl">&lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ChangeHosts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ChangeHosts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">v1.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">versionCode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">luoboQAQ&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">修改hosts文件来屏蔽广告&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此看来，如果只要替换文件，基本没有任何难度。&lt;/p>
&lt;h3 id="使用dnscrypt-proxy实现doh">&lt;a href="#%e4%bd%bf%e7%94%a8dnscrypt-proxy%e5%ae%9e%e7%8e%b0doh" class="header-anchor">&lt;/a>使用dnscrypt-proxy实现DoH
&lt;/h3>&lt;p>这部分我正在研究，等研究明白了就补上🕊️。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a class="link" href="https://topjohnwu.github.io/Magisk/guides.html" target="_blank" rel="noopener"
>Magisk官方开发指导&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>